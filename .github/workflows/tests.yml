name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  ruff:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      
      - name: Set up Python
        run: uv python install 3.11
      
      - name: Install ruff
        run: uv tool install ruff
      
      - name: Run Ruff
        run: uv run ruff check

  mypy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      
      - name: Set up Python
        run: uv python install 3.11
      
      - name: Install dependencies
        run: uv sync --extra dev
      
      - name: Run Mypy
        run: uv run bash scripts/run_mypy.sh

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      
      - name: Set up Python
        run: uv python install 3.11
      
      - name: Cache demo data
        uses: actions/cache@v4
        with:
          path: |
            DOTTDEMO.ZIP
            DOTTDEMO.000
            DOTTDEMO.001
            DOTTDEMO.bsc6
          key: demo-data-${{ hashFiles('converter/cli.py') }}
          restore-keys: |
            demo-data-
      
      - name: Install dependencies
        run: uv sync --extra dev
      
      - name: Download and prepare demo data
        run: |
          if [ ! -f DOTTDEMO.ZIP ]; then
            echo "üì• Downloading demo data..."
            if ! curl -L -o DOTTDEMO.ZIP https://archive.org/download/DayOfTheTentacleDemo/DOTTDEMO.ZIP; then
              echo "‚ùå Demo download failed! This is required for tests."
              exit 1
            fi
          else
            echo "‚úÖ Demo data already cached"
          fi
          
          if [ -f DOTTDEMO.ZIP ] && [ ! -f DOTTDEMO.000 ]; then
            echo "üìÇ Extracting demo data..."
            if ! unzip -o -q DOTTDEMO.ZIP; then
              echo "‚ùå Demo extraction failed!"
              exit 1
            fi
          fi
          
          if [ -f DOTTDEMO.000 ] && [ -f DOTTDEMO.001 ] && [ ! -f DOTTDEMO.bsc6 ]; then
            echo "üîÑ Converting demo data..."
            if ! uv run python converter/cli.py DOTTDEMO.000 DOTTDEMO.001 -o DOTTDEMO.bsc6; then
              echo "‚ùå Demo conversion failed!"
              exit 1
            fi
          fi
      
      - name: Run Pytest
        run: uv run python scripts/run_pytest_direct.py

  summary:
    runs-on: ubuntu-latest
    needs: [ruff, mypy, unit-tests]
    if: always()
    
    steps:
    - name: Check overall status
      run: |
        echo "üîç Checking CI results..."
        echo "Ruff: ${{ needs.ruff.result }}"
        echo "Mypy: ${{ needs.mypy.result }}"
        echo "Unit Tests: ${{ needs.unit-tests.result }}"
        
        if [ "${{ needs.ruff.result }}" == "success" ] && [ "${{ needs.mypy.result }}" == "success" ] && [ "${{ needs.unit-tests.result }}" == "success" ]; then
          echo "‚úÖ All CI checks passed!"
        else
          echo "‚ùå Some CI checks failed"
          exit 1
        fi
